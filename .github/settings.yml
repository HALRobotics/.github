# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://developer.github.com/v3/repos/#edit for all available settings.

  # The name of the repository. Changing this will rename the repository
  #name: .github

  # A short description of the repository that will show up on GitHub
  #description: "Setup of default settings for configuration of GitHub repositories"

  # A URL with more information about the repository
  homepage: https://hal-robotics.com/

  # A comma-separated list of topics to set on the repository
  topics: "hal robotics, robotics, robots"

  # Either `true` to make the repository private, or `false` to make it public.
  private: true

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: develop

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: bug
    color: '#d73a4a'
    description: "An issue with the system üêõ."
  - name: documentation
    color: '#bbed90'
    description: "Improvements or addition to documentation."
  - name: duplicate
    color: '#cfd3d7'
    description: "This issue or pull request already exists."
  - name: enhancement
    color: '#03b5fc'
    description: "New feature or request. :construction:"
  - name: feature
    color: '#fcba03'
    description: "New functionality that requires substantial work, potentially to underlying libraries."
  - name: "help wanted"
    color: '#a1db25'
    description: "Help needed to solve a user-specific problem. :pray:"
  - name: invalid
    color: '#fa57e4'
    description: "Insufficient information provided to give a meaningful answer. Ensure all possible information is provided."
    new_name: "info needed"
  - name: question
    color: '#6ad834'
    description: "Request for further information. :grey_question:"
  - name: wontfix
    color: '#ffffff'
    description: "This will not be worked on."
  - name: external fix
    color: '#0ff7e0'
    description: "Issue has been fixed in the relevant codebase but that still needs to be propagated before this can be closed."
  #- name: good for newcomers
  #  color: '#7057ff'
  #  description: Good for new contributors to work on.
  #  oldname: good first issue
  #- name: first-timers-only
  #  # include the old name to rename an existing label
  #  oldname: Help Wanted

# Milestones: define milestones for Issues and Pull Requests
#milestones:
#  - title: milestone-title
#    description: milestone-description
#    # The state of the milestone. Either `open` or `closed`
#    state: open

# Collaborators: give specific users access to this repository.
# See https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator for available options
#collaborators:
#  - username: bkeepers
#    # Note: Only valid on organization-owned repositories.
#    # The permission to grant the collaborator. Can be one of:
#    # * `pull` - can pull, but not push to or administer this repository.
#    # * `push` - can pull and push, but not administer this repository.
#    # * `admin` - can pull, push and administer this repository.
#    permission: push
#
#  - username: hubot
#    permission: pull

# See https://developer.github.com/v3/teams/#add-or-update-team-repository for available options
teams:
  - name: admin
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    permission: admin
  - name: core
    permission: push
  #- name: docs
  #  permission: push

branches:
  - name: master
    # https://developer.github.com/v3/repos/branches/#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: false
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams:
            - admin
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks: null
        # Required. Require branches to be up to date before merging.
        #strict: false
        # Required. The list of status checks to require in order to merge into this branch
        #contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams:
          - admin

  - name: develop
    # https://developer.github.com/v3/repos/branches/#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: false
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams:
            - admin
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks: null
        # Required. Require branches to be up to date before merging.
        #strict: false
        # Required. The list of status checks to require in order to merge into this branch
        #contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams:
            - admin